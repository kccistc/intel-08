좋아! #1(스모크 테스트) 끝났으니, **#2 “주소/그룹 고정 & HMAC 켜기”**를 딱 실행 단계로 안내할게.

2-1) 멀티캐스트 주소/포트 확정

기본값을 그대로 써도 됩니다.

그룹: 239.20.20.20

포트: 5520

(필요하면 --mcast, --port로 바꿀 수 있어요. NIC가 여러 개면 --iface <로컬IP>를 서버/클라이언트에 각각 지정해 주세요.)

2-2) HMAC(무결성) 켜기 — 임시 실행

서버와 차량 둘 다 같은 키를 써야 합니다.

서버(PC/RSU)
export V2X_KEY="mysecret"          # 원하는 키로 변경
python3 v2x_alert_server.py --repeat --hmac-key "$V2X_KEY" \
  --type collision --severity high --distance-m 500 --suggest slow_down

차량(Jetson/RPi)
export V2X_KEY="mysecret"          # 서버와 동일
python3 v2x_alert_client.py --hmac-key "$V2X_KEY" --log alerts.csv

정상 동작 확인

차량 콘솔에 이런 식으로 뜨면 OK:

[RECV] ... dist=500.0m suggest=slow_down OK


CSV에도 마지막 컬럼이 OK 로 기록됩니다(예: ...,slow_down,OK).

BAD가 뜨면 키가 다르거나, UNVERIFIED면 클라이언트에 --hmac-key를 안 준 상태예요.

Windows PowerShell이라면:

$env:V2X_KEY="mysecret"
python v2x_alert_server.py --repeat --hmac-key $env:V2X_KEY
# 차량 쪽도 동일하게 실행

2-3) HMAC 키를 영구화(선택)

나중에 자동 실행할 때 편하도록 환경파일을 써두면 좋아요.

방법 A) .env 파일(+ 간단 래퍼)

/opt/v2x/.env:

V2X_KEY=mysecret


서버 실행 래퍼(예: /opt/v2x/run_server.sh):

#!/usr/bin/env bash
set -a; source /opt/v2x/.env; set +a
exec python3 /opt/v2x/v2x_alert_server.py --repeat --hmac-key "$V2X_KEY" \
  --type collision --severity high --distance-m 500 --suggest slow_down


차량 실행 래퍼도 같은 식으로 --hmac-key "$V2X_KEY" 포함.

방법 B) systemd 환경(다음 단계에서 서비스 만들 때 함께 적용)

유닛 파일에:

Environment=V2X_KEY=mysecret
ExecStart=/usr/bin/python3 /opt/v2x/v2x_alert_server.py --repeat --hmac-key ${V2X_KEY} ...

2-4) (선택) 인터페이스 고정

NIC가 여러 개이거나 AP가 멀티캐스트를 특정 NIC로만 허용하면:

서버:

python3 v2x_alert_server.py --repeat --hmac-key "$V2X_KEY" --iface 192.168.0.10


차량:

python3 v2x_alert_client.py --hmac-key "$V2X_KEY" --iface 192.168.0.23

2-5) 문제 발생 시 빠른 체크

동일 AP(가능하면 5 GHz)인지 확인

방화벽에서 UDP 5520 허용

패킷 흐름:

sudo tcpdump -i wlan0 udp port 5520


여전히 수신 안 되면 AP의 멀티캐스트/IGMP 설정 확인
